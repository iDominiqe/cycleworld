// –ì–ª–æ–±–∞–ª—å–Ω—ã–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ
let currentLang = 'en';
let currentPlatform = 'pc';
let countdownInterval;
let syncInterval;
let worldData = {};
let baroData = {};
let lastServerTime = Date.now();
let previousStates = {};

// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
document.addEventListener('DOMContentLoaded', function() {
    // –ó–∞–≥—Ä—É–∂–∞–µ–º —Å–æ—Ö—Ä–∞–Ω–µ–Ω–Ω—ã–π —è–∑—ã–∫
    const savedLang = localStorage.getItem('warframe-language') || 'en';
    setLanguage(savedLang);
    
    // –°–æ–∑–¥–∞–µ–º –∫–∞—Ä—Ç–æ—á–∫–∏ –º–∏—Ä–æ–≤
    createWorldCards();
    
    // –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –¥–ª—è –∫–Ω–æ–ø–æ–∫ —è–∑—ã–∫–∞
    document.querySelectorAll('.lang-btn').forEach(btn => {
        btn.addEventListener('click', function() {
            setLanguage(this.dataset.lang);
        });
    });
    
    // –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –¥–ª—è –≤–∫–ª–∞–¥–æ–∫ –∫–æ–Ω—Ç–µ–Ω—Ç–∞
    document.querySelectorAll('.content-tab').forEach(tab => {
        tab.addEventListener('click', function() {
            const tabId = this.dataset.tab;
            
            // –û–±–Ω–æ–≤–ª—è–µ–º –∞–∫—Ç–∏–≤–Ω—ã–µ –≤–∫–ª–∞–¥–∫–∏
            document.querySelectorAll('.content-tab').forEach(t => {
                t.classList.remove('active');
            });
            this.classList.add('active');
            
            // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–∏–π —Ä–∞–∑–¥–µ–ª
            document.querySelectorAll('.content-section').forEach(section => {
                section.classList.remove('active');
            });
            document.getElementById(`${tabId}-section`).classList.add('active');
        });
    });
    
    // –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –¥–ª—è –ø–µ—Ä–µ–∫–ª—é—á–∞—Ç–µ–ª—è –ø–ª–∞—Ç—Ñ–æ—Ä–º
    document.querySelectorAll('.platform-btn').forEach(btn => {
        btn.addEventListener('click', function() {
            const platform = this.dataset.platform;
            
            // –û–±–Ω–æ–≤–ª—è–µ–º –∞–∫—Ç–∏–≤–Ω—ã–µ –∫–Ω–æ–ø–∫–∏ –ø–ª–∞—Ç—Ñ–æ—Ä–º
            document.querySelectorAll('.platform-btn').forEach(b => {
                b.classList.remove('active');
            });
            this.classList.add('active');
            
            // –û–±–Ω–æ–≤–ª—è–µ–º —Ç–µ–∫—É—â—É—é –ø–ª–∞—Ç—Ñ–æ—Ä–º—É
            currentPlatform = platform;
            
            // –ó–∞–≥—Ä—É–∂–∞–µ–º –¥–∞–Ω–Ω—ã–µ –¥–ª—è –≤—ã–±—Ä–∞–Ω–Ω–æ–π –ø–ª–∞—Ç—Ñ–æ—Ä–º—ã
            fetchAPIData();
        });
    });
    
    // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –¥–∞–Ω–Ω—ã—Ö
    fetchAPIData();
    
    // –ó–∞–ø—É—Å–∫–∞–µ–º –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –≤—Ä–µ–º–µ–Ω–∏ –∫–∞–∂–¥—É—é —Å–µ–∫—É–Ω–¥—É
    countdownInterval = setInterval(updateCountdowns, 1000);
    
    // –°–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∏—Ä—É–µ–º —Å —Å–µ—Ä–≤–µ—Ä–æ–º –∫–∞–∂–¥—ã–µ 15 —Å–µ–∫—É–Ω–¥
    syncInterval = setInterval(fetchAPIData, 15000);
    
    // –û–±–Ω–æ–≤–ª—è–µ–º —Å–æ–±—ã—Ç–∏—è –∏ —Å—Ç–∞—Ç—É—Å
    updateEventsData();
    updateStatusData();
});

// –§—É–Ω–∫—Ü–∏—è —Å–æ–∑–¥–∞–Ω–∏—è –∫–∞—Ä—Ç–æ—á–µ–∫ –º–∏—Ä–æ–≤
function createWorldCards() {
    const worldsGrid = document.getElementById('worlds-grid');
    const worlds = [
        { id: 'earth', icon: 'üåç', titleKey: 'earthTitle', locationKey: 'earthLocation' },
        { id: 'cetus', icon: 'üèúÔ∏è', titleKey: 'cetusTitle', locationKey: 'cetusLocation' },
        { id: 'vallis', icon: 'üßä', titleKey: 'vallisTitle', locationKey: 'vallisLocation' },
        { id: 'cambion', icon: 'üíÄ', titleKey: 'cambionTitle', locationKey: 'cambionLocation' },
        { id: 'duviri', icon: 'üëë', titleKey: 'duviriTitle', locationKey: 'duviriLocation' },
        { id: 'zariman', icon: 'üöÄ', titleKey: 'zarimanTitle', locationKey: 'zarimanLocation' }
    ];

    worlds.forEach(world => {
        const worldCard = document.createElement('div');
        worldCard.className = `world-card ${world.id}`;
        worldCard.innerHTML = `
            <div class="cycle-transition" id="${world.id}-transition" data-i18n="cycleChange">Cycle change...</div>
            <div>
                <h2>${world.icon} <span data-i18n="${world.titleKey}">${translations.en[world.titleKey]}</span></h2>
                <p class="location-name" data-i18n="${world.locationKey}">${translations.en[world.locationKey]}</p>
            </div>
            <div>
                <div class="diagram">
                    <div class="planet">${world.icon}</div>
                    <div class="orbit" id="${world.id}-orbit">
                        <div class="orbiter" id="${world.id}-orbiter">‚òÄÔ∏è</div>
                    </div>
                </div>
                <div class="status-container">
                    <div id="${world.id}-status" class="status">Loading...</div>
                    <div id="${world.id}-timer" class="timer">--:--:--</div>
                    <div id="${world.id}-change-time" class="change-time" data-i18n="changeTime">Change: --:--</div>
                </div>
                <div class="progress-bar">
                    <div id="${world.id}-progress" class="progress" style="width: 0%"></div>
                </div>
            </div>
        `;
        worldsGrid.appendChild(worldCard);
    });
}

// –û—Å—Ç–∞–ª—å–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏ (updateWorldDisplay, updateBaroDisplay, animateCycleChange, updateCountdowns –∏ —Ç.–¥.)
// ... (–≤—Å–µ –æ—Å—Ç–∞–ª—å–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏ –∏–∑ –ø—Ä–µ–¥—ã–¥—É—â–µ–≥–æ –∫–æ–¥–∞)
